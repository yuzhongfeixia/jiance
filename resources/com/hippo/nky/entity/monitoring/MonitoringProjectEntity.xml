<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hippo.nky.entity.monitoring.MonitoringProjectEntity">
	<select id="projectList" parameterType="java.util.HashMap" resultType="com.hippo.nky.entity.monitoring.MonitoringProjectEntity">
		SELECT PROJECT.ID,
		       PROJECT.PLAN_CODE AS PLANCODE,
		       PROJECT.NAME,
		       PROJECT.LEADUNIT,
		       PROJECT.STARTTIME,
		       PROJECT.ENDTIME,
		       PROJECT.DETACHED,
		       PROJECT.STATE,
		       PROJECT.PROJECT_CODE AS PROJECTCODE,
		       PROJECT.PUBLISH_DATE AS PUBLISHDATE,
		       PROJECT.SAMPLE_TEMPLET AS SAMPLETEMPLET,
		       PROJECT.INDUSTRY_CODE AS INDUSTRYCODE,
		       PLAN.PLEVEL,
		       #{userType} AS USERTYPE
		  FROM NKY_MONITORING_PLAN PLAN,
		       NKY_MONITORING_PROJECT PROJECT
		 WHERE PROJECT.PLAN_CODE = PLAN.PLAN_CODE
		   AND PLAN.STATE = '1'
		 <if test="releaseunit != '' and releaseunit != null ">   
		   AND PLAN.RELEASEUNIT =  #{releaseunit}
		 </if>
		 <if test="leadunit != '' and leadunit != null ">   
		   AND PROJECT.LEADUNIT =  #{leadunit}
		 </if>
		 <if test="name != '' and name != null ">
		   AND PROJECT.NAME like '%' || #{name} || '%'
		 </if>
		   ORDER BY PLAN.RELEASETIME DESC,PROJECT.PUBLISH_DATE DESC NULLS FIRST
	</select>
<!-- 	<select id="projectList" parameterType="java.util.HashMap" resultType="com.hippo.nky.entity.monitoring.MonitoringProjectEntity"> -->
<!-- 		SELECT PROJECT.ID, -->
<!-- 		       PROJECT.PLAN_CODE AS PLANCODE, -->
<!-- 		       PROJECT.NAME, -->
<!-- 		       PROJECT.LEADUNIT, -->
<!-- 		       PROJECT.STARTTIME, -->
<!-- 		       PROJECT.ENDTIME, -->
<!-- 		       PROJECT.DETACHED, -->
<!-- 		       PROJECT.STATE, -->
<!-- 		       PROJECT.PROJECT_CODE AS PROJECTCODE, -->
<!-- 		       PROJECT.PUBLISH_DATE AS PUBLISHDATE, -->
<!-- 		       PROJECT.SAMPLE_TEMPLET AS SAMPLETEMPLET, -->
<!-- 		       PROJECT.INDUSTRY_CODE AS INDUSTRYCODE, -->
<!-- 		       PLAN.PLEVEL, -->
<!-- 		       #{userType} AS USERTYPE, -->
<!-- 		       <if test="leadunit != '' and leadunit != null "> -->
<!-- 		       	CY_ALL.COUNT AS allCount, -->
<!-- 		       	CY_REPORT.COUNT AS cyCount, -->
<!-- 		       	JC_REPORT.COUNT AS jcCount	 -->
<!-- 			   </if>		        -->
<!-- 		  FROM NKY_MONITORING_PLAN PLAN, -->
<!-- 		       NKY_MONITORING_PROJECT PROJECT -->
<!-- 		  	牵头单位为任务数量做的验证 --> 
<!-- 		 <if test="leadunit != '' and leadunit != null "> -->
<!-- 		 	 LEFT JOIN (SELECT TASK.PROJECT_CODE, -->
<!-- 		          SUM(TASK.SAMPLING_COUNT) AS COUNT -->
<!-- 		          FROM NKY_MONITORING_TASK TASK -->
<!-- 		          GROUP BY TASK.PROJECT_CODE) CY_ALL  -->
<!--               ON (CY_ALL.PROJECT_CODE = PROJECT.PROJECT_CODE) -->
              
<!--             LEFT JOIN (SELECT TASK.PROJECT_CODE, -->
<!--             		   COUNT(NSI.ID) AS COUNT -->
<!-- 	   				   FROM NKY_SAMPLING_INFO NSI -->
<!-- 	                   LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE -->
<!-- 	                   WHERE NSI.SAMPLE_STATUS IN ('3','4','5') -->
<!-- 	                   GROUP BY TASK.PROJECT_CODE) CY_REPORT  -->
<!-- 	          ON (CY_REPORT.PROJECT_CODE = PROJECT.PROJECT_CODE) -->
	          
<!-- 	        LEFT JOIN (SELECT TASK.PROJECT_CODE, -->
<!-- 		            COUNT(NSI.ID) AS COUNT -->
<!-- 		            FROM NKY_SAMPLING_INFO NSI -->
<!-- 		            LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE -->
<!-- 		            WHERE NSI.SAMPLE_STATUS = '5' -->
<!-- 		            GROUP BY TASK.PROJECT_CODE) JC_REPORT -->
<!--               ON (JC_REPORT.PROJECT_CODE = PROJECT.PROJECT_CODE)     -->
<!-- 		 </if> -->
<!-- 		 WHERE PROJECT.PLAN_CODE = PLAN.PLAN_CODE -->
<!-- 		   AND PLAN.STATE = '1' -->
<!-- 		 <if test="releaseunit != '' and releaseunit != null ">    -->
<!-- 		   AND PLAN.RELEASEUNIT =  #{releaseunit} -->
<!-- 		 </if> -->
<!-- 		 <if test="leadunit != '' and leadunit != null ">    -->
<!-- 		   AND PROJECT.LEADUNIT =  #{leadunit} -->
<!-- 		 </if> -->
<!-- 		 <if test="name != '' and name != null "> -->
<!-- 		   AND PROJECT.NAME like '%' || #{name} || '%' -->
<!-- 		 </if> -->
<!-- 		   ORDER BY PLAN.RELEASETIME DESC,PROJECT.PUBLISH_DATE DESC NULLS FIRST -->
<!-- 	</select> -->
	
	<!-- 取得项目的完成情况（任务数量、抽样完成数量、检测数量完成情况） -->
	<select id="projectStatistical" parameterType="java.util.HashMap" resultType="com.hippo.nky.entity.monitoring.MonitoringProjectEntity">
		SELECT 
		       PROJECT.LEADUNIT,
		       PROJECT.PROJECT_CODE AS PROJECTCODE,
		       CY_ALL.COUNT AS allCount,
		       nvl(CY_REPORT.COUNT,0) AS cyCount,
		       nvl(JC_REPORT.COUNT,0) AS jcCount		       
		  FROM NKY_MONITORING_PROJECT PROJECT
		 	 LEFT JOIN (SELECT TASK.PROJECT_CODE,
		          SUM(TASK.SAMPLING_COUNT) AS COUNT
		          FROM NKY_MONITORING_TASK TASK
		          GROUP BY TASK.PROJECT_CODE) CY_ALL 
              ON (CY_ALL.PROJECT_CODE = PROJECT.PROJECT_CODE)
              
            LEFT JOIN (SELECT TASK.PROJECT_CODE,
            		   COUNT(NSI.ID) AS COUNT
	   				   FROM NKY_SAMPLING_INFO NSI
	                   LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE
	                   WHERE NSI.SAMPLE_STATUS IN ('3','4','5')
	                   GROUP BY TASK.PROJECT_CODE) CY_REPORT 
	          ON (CY_REPORT.PROJECT_CODE = PROJECT.PROJECT_CODE)
	          
	        LEFT JOIN (SELECT TASK.PROJECT_CODE,
		            COUNT(NSI.ID) AS COUNT
		            FROM NKY_SAMPLING_INFO NSI
		            LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE
		            WHERE NSI.SAMPLE_STATUS = '5'
		            GROUP BY TASK.PROJECT_CODE) JC_REPORT
              ON (JC_REPORT.PROJECT_CODE = PROJECT.PROJECT_CODE)    
		 WHERE 1=1
		 <if test="id != '' and id != null ">
		  and PROJECT.ID = #{id}  
		 </if>
		 <if test="projectCode != '' and projectCode != null ">
		  and PROJECT.PROJECT_CODE = #{projectCode}  
		 </if>
	</select>
	
	<select id="samplingComleteStatistical" parameterType="java.util.HashMap" resultType="com.hippo.nky.entity.monitoring.MonitoringProjectEntity">
		SELECT 
		       PROJECT.LEADUNIT,
		       PROJECT.PROJECT_CODE AS PROJECTCODE,
		       CY_ALL.COUNT AS allCount,
		       nvl(CY_REPORT.COUNT,0) AS cyCount,
		       nvl(CY_COMPLETE.COUNT,0) AS cycmCount		       
		  FROM NKY_MONITORING_PROJECT PROJECT
		 	 LEFT JOIN (SELECT TASK.PROJECT_CODE,
		          SUM(TASK.SAMPLING_COUNT) AS COUNT
		          FROM NKY_MONITORING_TASK TASK
		          WHERE TASK.ORG_CODE = #{ogrCode}
		          GROUP BY TASK.PROJECT_CODE) CY_ALL 
              ON (CY_ALL.PROJECT_CODE = PROJECT.PROJECT_CODE)
              
            LEFT JOIN (SELECT TASK.PROJECT_CODE,
            		   COUNT(NSI.ID) AS COUNT
	   				   FROM NKY_SAMPLING_INFO NSI
	                   LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE
	                   WHERE NSI.SAMPLE_STATUS IN ('3','4','5')
	                   AND NSI.SAMPLING_ORG_CODE = #{ogrCode}
	                   GROUP BY TASK.PROJECT_CODE) CY_REPORT 
	          ON (CY_REPORT.PROJECT_CODE = PROJECT.PROJECT_CODE)
	        <!-- 抽检分离抽样信息上报时 ,取得抽样信息完整度完整的样品数量-->
	        LEFT JOIN (SELECT TASK.PROJECT_CODE,
            		   COUNT(NSI.ID) AS COUNT
	   				   FROM NKY_SAMPLING_INFO NSI
	                   LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE
	                   WHERE NSI.SAMPLE_STATUS = '1'
	                   AND NSI.COMPLETE = '1'
	                   AND NSI.SAMPLING_ORG_CODE = #{ogrCode}
	                   GROUP BY TASK.PROJECT_CODE) CY_COMPLETE 
	          ON (CY_COMPLETE.PROJECT_CODE = PROJECT.PROJECT_CODE)        
		 WHERE 1=1
		  and PROJECT.PROJECT_CODE = #{projectCode}  
	</select>
	
	<select id="detectionComleteStatistical" parameterType="java.util.HashMap" resultType="com.hippo.nky.entity.monitoring.MonitoringProjectEntity">
		SELECT 
		       PROJECT.LEADUNIT,
		       PROJECT.PROJECT_CODE AS PROJECTCODE,
		       CY_ALL.COUNT AS allCount,
		       nvl(JC_COMPLETE.COUNT,0) AS jcCount		       
		  FROM NKY_MONITORING_PROJECT PROJECT
		 	 LEFT JOIN (SELECT TASK.PROJECT_CODE,
		          SUM(TASK.SAMPLING_COUNT) AS COUNT
		          FROM NKY_MONITORING_TASK TASK
		          WHERE TASK.ORG_CODE = #{ogrCode}
		          GROUP BY TASK.PROJECT_CODE) CY_ALL 
              ON (CY_ALL.PROJECT_CODE = PROJECT.PROJECT_CODE)
              
            LEFT JOIN (SELECT TASK.PROJECT_CODE,
            		   COUNT(NSI.ID) AS COUNT
	   				   FROM NKY_SAMPLING_INFO NSI
	                   LEFT JOIN NKY_MONITORING_TASK TASK ON NSI.TASK_CODE = TASK.TASK_CODE
	                   WHERE NSI.SAMPLE_STATUS IN ('4','5')
	                   AND NSI.DETECTION_CODE = #{ogrCode}
	                   GROUP BY TASK.PROJECT_CODE) JC_COMPLETE 
	          ON (JC_COMPLETE.PROJECT_CODE = PROJECT.PROJECT_CODE) 
		 WHERE 1=1
		  and PROJECT.PROJECT_CODE = #{projectCode}  
	</select>
	

	<select id="getAgrVersionId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT VERSION.AGR_VERSION_ID AS ID
		  FROM NKY_MONITORING_PROJECT PROJECT, NKY_STANDARD_VERSION VERSION
		 WHERE PROJECT.JUDGE_VERSION_ID = VERSION.ID
		   AND PROJECT.PROJECT_CODE = #{project_code}
	</select>
	<select id="getPollVersionId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT VERSION.POLL_VERSION_ID AS ID
		  FROM NKY_MONITORING_PROJECT PROJECT, NKY_STANDARD_VERSION VERSION
		 WHERE PROJECT.JUDGE_VERSION_ID = VERSION.ID
		   AND PROJECT.PROJECT_CODE = #{project_code}
	</select>	
	<select id="getCategoryId" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT ID
		  FROM NKY_PO_CATEGORY
		 WHERE NAME =
		       (SELECT TYPENAME
		          FROM T_S_TYPE
		         WHERE TYPEGROUPID =
		               (SELECT ID FROM T_S_TYPEGROUP WHERE TYPEGROUPCODE = 'industry')
		           AND TYPECODE = #{industryCode})
		   AND VERSIONID = #{pollVersionId}
	</select>	
	<resultMap type="java.util.HashMap" id="monitoringAreaCountListResultMap">
		<result column="ID" property="id" />
		<result column="PROJECT_CODE" property="projectCode" />
		<result column="CITYCODE" property="citycode" />
		<result column="COUNT" property="count" />
		<result column="DISTRICTCODE_COUNT" property="districtcodeCount" />
		<result column="DISTRICTCODE_NAME" property="districtcodeName" />
		<result column="NAME_COUNT" property="nameCount" />
	</resultMap>
	<select id="monitoringAreaCountList" parameterType="java.lang.String" resultMap="monitoringAreaCountListResultMap">
	    SELECT T1.ID,
	           T1.PROJECT_CODE,
	           T1.CITYCODE,
	           T1.COUNT,
	           T2.DISTRICTCODE_COUNT,
	           T2.DISTRICTCODE_NAME,
	           T2.NAME_COUNT
	      FROM NKY_MONITORING_AREA_COUNT T1
	      LEFT JOIN (SELECT N1.CITYCODE,
	                        REPLACE(WM_CONCAT(N1.DISTRICTCODE || '#KV#' || N1.COUNT),',','#EM#') AS DISTRICTCODE_COUNT,
	                        REPLACE(WM_CONCAT(N1.DISTRICTCODE || '#KV#' || N2.AREANAME),',','#EM#') AS DISTRICTCODE_NAME,
	                        REPLACE(REPLACE(WM_CONCAT(N2.AREANAME || '(' || N1.COUNT || ')'),',','、'),'(0)','') AS NAME_COUNT
	                   FROM NKY_MONITORING_AREA_COUNT N1
	                   LEFT JOIN SYS_AREA_CODE N2 ON (N1.DISTRICTCODE = N2.CODE)
	                  WHERE N1.PROJECT_CODE = #{project_code}
	                    AND N1.DISTRICTCODE IS NOT NULL
	                  GROUP BY N1.CITYCODE) T2 ON (T1.CITYCODE = T2.CITYCODE)
	     WHERE T1.PROJECT_CODE = #{project_code}
	       AND T1.DISTRICTCODE IS NULL
	</select>
	<resultMap type="java.util.HashMap" id="monitoringBreedListResultMap">
		<result column="ID" property="id" />
		<result column="PROJECT_CODE" property="projectCode" />
		<result column="AGR_CODE" property="agrCode" />
		<result column="AGR_NAME" property="agrName" />
	</resultMap>
    <select id="monitoringBreedList" parameterType="java.lang.String" resultMap="monitoringBreedListResultMap">
	     SELECT 
	     		T1.ID, 
	     		T1.AGR_CODE, 
	     		T1.PROJECT_CODE, 
	     		T2.CNAME AS AGR_NAME
	       FROM 
	       		NKY_MONITORING_BREED T1
	       LEFT 
	       		JOIN V_NKY_MONITORING_AGR T2 
	         ON 
	         	T1.PROJECT_CODE = T2.PROJECT_CODE 
	        AND 
	        	T1.AGR_CODE = T2.CODE
	      WHERE 
	      		T1.PROJECT_CODE = #{project_code}
    </select>
	<resultMap type="java.util.HashMap" id="monitoringDectionTempletListResultMap">
		<result column="AGR_CODE" property="agrCode" />
		<result column="PROJECT_CODE" property="projectCode" />
		<result column="AGR_NAME" property="agrName" />
		<result column="POLL_CAS" property="pollCas" />
		<result column="POLL_NAME" property="pollName" />
	</resultMap>
    <select id="monitoringDectionTempletList" parameterType="java.lang.String" resultMap="monitoringDectionTempletListResultMap">
		SELECT DECTION.AGR_CODE,
		       DECTION.PROJECT_CODE,
		       AGR_DIC.CNAME AS AGR_NAME,
		       REPLACE(WM_CONCAT(DECTION.POLL_CAS || '#KV#' || POLL_DIC.POPCNAME), ',', '#EM#') AS POLL_CAS,
		       REPLACE(WM_CONCAT(POLL_DIC.POPCNAME), ',', '、') AS POLL_NAME
		  FROM NKY_MONITORING_DECTION_TEMPLET DECTION,
		       NKY_POLL_DICTIONARY POLL_DIC,
		       V_NKY_MONITORING_AGR AGR_DIC
		 WHERE DECTION.POLL_CAS = POLL_DIC.CAS
		   AND AGR_DIC.PROJECT_CODE = DECTION.PROJECT_CODE 
		   AND DECTION.AGR_CODE = AGR_DIC.CODE
		   AND DECTION.PROJECT_CODE = #{project_code}
		 GROUP BY DECTION.AGR_CODE, DECTION.PROJECT_CODE, AGR_DIC.CNAME
    </select>
	
    <select id="selectMonitoringDectionPollList" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT DISTINCT DECTION.POLL_CAS as pollCas, POLL_DIC.POPCNAME as pollName
		FROM NKY_MONITORING_DECTION_TEMPLET DECTION,
			 NKY_POLL_DICTIONARY POLL_DIC,
			 V_NKY_MONITORING_AGR AGR_DIC
		WHERE DECTION.POLL_CAS = POLL_DIC.CAS
		  AND AGR_DIC.PROJECT_CODE = DECTION.PROJECT_CODE
		  AND DECTION.AGR_CODE = AGR_DIC.CODE
		  AND DECTION.PROJECT_CODE = #{project_code}
	</select>
	
	<resultMap type="java.util.HashMap" id="monitoringOrganizationListResultMap">
		<result column="ID" property="id" />
		<result column="PROJECT_CODE" property="projectCode" />
		<result column="ORG_CODE" property="orgCode" />
		<result column="ORG_NAME" property="orgName" />
	</resultMap>
    <select id="monitoringOrganizationList" parameterType="java.lang.String" resultMap="monitoringOrganizationListResultMap">
		SELECT M_ORG.ID, 
		       M_ORG.PROJECT_CODE,
		       M_ORG.ORG_CODE, 
		       ORG.OGRNAME AS ORG_NAME
		  FROM NKY_MONITORING_ORGANIZATION M_ORG, 
		       NKY_ORGANIZATION_INFO ORG
		 WHERE M_ORG.ORG_CODE = ORG.CODE
		   AND M_ORG.PROJECT_CODE = #{project_code}
    </select>
    
 	<resultMap type="java.util.HashMap" id="monitoringTaskListResultMap">
		<result column="ORG_CODE" property="orgCode" />
		<result column="OGRNAME" property="ogrName" />
		<result column="AREACODE" property="areacode" />
		<result column="MONITORING_LINK" property="monitoringLink" />
		<result column="AGR_CODE" property="agrCode" />
		<result column="SAMPLING_COUNTS" property="samplingCounts" />
		<result column="TASKNAME" property="taskname" />
		<result column="AREANAME" property="areaName" />
		<result column="AGRNAME" property="agrName" />
		<result column="MONITORINGLINK_NAME" property="monitoringlinkName" />
		<result column="SAMPLING_COUNT" property="samplingCount" />
	</resultMap>
 	<select id="monitoringTaskList" parameterType="java.lang.String" resultMap="monitoringTaskListResultMap">
      SELECT TASK.ORG_CODE,
             ORG.OGRNAME,
             REPLACE(WM_CONCAT(ROW_NUM || '#KV#' || TASK.AREACODE),',','#EM#') AS AREACODE,
             REPLACE(WM_CONCAT(ROW_NUM || '#KV#' || TASK.MONITORING_LINK),',','#EM#') AS MONITORING_LINK,
             REPLACE(WM_CONCAT(ROW_NUM || '#KV#' || TASK.AGR_CODE),',','#EM#') AS AGR_CODE,
             REPLACE(WM_CONCAT(ROW_NUM || '#KV#' || TASK.SAMPLING_COUNT),',','#EM#') AS SAMPLING_COUNTS,
             REPLACE(WM_CONCAT(ROW_NUM || '#KV#' || TASK.TASKNAME),',','#EM#') AS TASKNAME,
             REPLACE(WM_CONCAT(FAREA.AREANAME || AREA.AREANAME), ',', '、') AS AREANAME,
             REPLACE(WM_CONCAT(AGR_DIC.CNAME), ',', '、') AS AGRNAME,
             REPLACE(WM_CONCAT(PKG_COMMON.GET_DIC_NAME(PROJECT.INDUSTRY_CODE || 'monitoringLink',TASK.MONITORING_LINK)),',','、') AS MONITORINGLINK_NAME,
             SUM(TASK.SAMPLING_COUNT) AS SAMPLING_COUNT
        FROM (SELECT NKY_MONITORING_TASK.*,
                     ROW_NUMBER() OVER(PARTITION BY ORG_CODE ORDER BY ID) - 1 AS ROW_NUM
                FROM NKY_MONITORING_TASK
               WHERE PROJECT_CODE = #{project_code}) TASK
        LEFT JOIN SYS_AREA_CODE AREA ON TASK.AREACODE = AREA.CODE
        LEFT JOIN SYS_AREA_CODE FAREA ON SUBSTR(AREA.CODE, 1, 4) || '00' = FAREA.CODE AND SUBSTR(AREA.CODE, 5, 2) != '00'
        LEFT JOIN V_NKY_MONITORING_AGR AGR_DIC ON AGR_DIC.PROJECT_CODE = #{project_code} 
        	  AND TASK.AGR_CODE = AGR_DIC.CODE
        LEFT JOIN NKY_ORGANIZATION_INFO ORG ON TASK.ORG_CODE = ORG.CODE
        LEFT JOIN NKY_MONITORING_PROJECT PROJECT ON TASK.PROJECT_CODE =TASK.PROJECT_CODE
       WHERE PROJECT.PROJECT_CODE = #{project_code}
       GROUP BY TASK.ORG_CODE, ORG.OGRNAME
 	</select>

 	<resultMap type="java.util.HashMap" id="getUserDepartInfoRequestMap">
		<result column="ID" property="id"/>
		<result column="GRADE" property="grade"/>
		<result column="GRADECODE" property="gradeCode"/>
    </resultMap>
	<select id="getUserDepartInfoForPlanCode" resultMap="getUserDepartInfoRequestMap" parameterType="java.lang.String">
		SELECT T2.ID,
		       T2.GRADE,
		       ( CASE T2.GRADE WHEN '1' THEN '32' WHEN '2' THEN SUBSTR(CODE,1,4) WHEN '3' THEN AREACODE2 END ) AS GRADECODE
		  FROM NKY_MONITORING_PLAN T1, T_S_DEPART T2
		 WHERE T1.RELEASEUNIT = T2.ID
		   AND T1.PLAN_CODE = #{code}
		   AND ROWNUM = 1
	</select>
	
	<!-- 为第五步质检机构增加排序 (2015-12-15放开过滤条件)-->
	<select id="getProjectOrganization" resultType="com.hippo.nky.entity.organization.OrganizationEntity" parameterType="java.lang.String">
<!-- 		select noi.*  -->
<!-- 		from -->
<!-- 		 	nky_organization_info noi -->
<!-- 			inner join sys_area_code area on(noi.areacode2 = area.code) -->
<!-- 		where noi.areacode2 like #{code} -->
<!-- 		order by area.show_order -->
		
		select noi.* 
		from
		 	nky_organization_info noi
			inner join sys_area_code area on(noi.areacode2 = area.code)
		order by area.show_order
	</select>
</mapper>